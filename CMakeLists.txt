cmake_minimum_required(VERSION 3.25)
project(cmake_test VERSION 1.0)

# set(VERILATOR_ROOT /mnt/ext/verisc/open/verilator-5.006/)
# set(CMAKE_FIND_DEBUG_MODE TRUE)
# find_package(verilator HINTS ${VERILATOR_ROOT})
# set(CMAKE_FIND_DEBUG_MODE FALSE)

find_package(verilator)

if (NOT verilator_FOUND)
  message(FATAL_ERROR "Verilator was not found. Either install it, or set the VERILATOR_ROOT environment variable")
endif()

# Include Verilog sources that are not generated
set(V_FILES
    ${PROJECT_SOURCE_DIR}/vsrcs/tb.v
    ${PROJECT_SOURCE_DIR}/vsrcs/apb_master.v
    ${PROJECT_SOURCE_DIR}/vsrcs/simple_apb_slave.v
    ${PROJECT_SOURCE_DIR}/vsrcs/apb_interconnect.v
    )


# Set variable for source that will be generated
set(GENERATED_FILE
    ${PROJECT_BINARY_DIR}/apb_subsystem.v
    )
set_source_files_properties(${GENERATED_FILE} PROPERTIES GENERATED TRUE)

# Copy the dummy file that is not the final generated file
execute_process(
    COMMAND cp "${PROJECT_SOURCE_DIR}/vsrcs/apb_subsystem_dummy.v" "${PROJECT_BINARY_DIR}/apb_subsystem.v"
    )

# This file would normally be generated by custom_command
set(ACTUAL_FILE
    "${PROJECT_SOURCE_DIR}/vsrcs/apb_subsystem.v"
    )

# Generate the actual file
set(STAMP_FILE "${PROJECT_BINARY_DIR}/stamp.stamp")
add_custom_command(
    OUTPUT ${GENERATED_FILE} ${STAMP_FILE}
    COMMAND cp ${ACTUAL_FILE} "${PROJECT_BINARY_DIR}/apb_subsystem.v"
    COMMAND touch ${STAMP_FILE}
    # COMMAND ${CMAKE_COMMAND} ${CMAKE_BINARY_DIR} # Rerun cmake configure, not ideal
    DEPENDS ${ACTUAL_FILE}
    COMMENT "Generating ${ACTUAL_FILE}"
    )

add_custom_target(
    genfile
    DEPENDS ${GENERATED_FILE} ${STAMP_FILE}
    )

add_executable(vlt 
    )
verilate(vlt
    SOURCES ${V_FILES} ${GENERATED_FILE}
    TOP_MODULE tb
    VERILATOR_ARGS --main --exe --timing 
    )
